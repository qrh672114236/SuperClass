apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


//9.0-28
//Pie (Android P)
//8.1-27
//Oreo(Android O)（奥利奥）
//8.0-26
//Oreo(Android O)（奥利奥）
//7.1-25
//Nougat(Android N)（牛轧糖）
//7.0-24
//Nougat(Android N)（牛轧糖）
//6.0-23
//Marshmallow(Android M)（棉花糖）
//5.1-22
//Lollipop(Android L)（棒棒糖）
//5.0-21
//Lollipop(Android L)（棒棒糖）
//4.4-19
//KITKAT（奇巧巧克力）


android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.superclass"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //ndk配置
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++14"

                abiFilters "armeabi-v7a"

                //abiFilters 编译abi设置

                //arguments  "-D变量名=参数"  给变量传递参数
                // arguments "-DANDROID_ARM_NEON=TRUE",

                // arguments "-D变量名=参数1 参数2"传递多个参数
                // "-DANDROID_CPP_FEATURES=rtti exceptions"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            //cmake路径
            path "CMakeLists.txt"
            version "3.6.0"
        }
    }
//    ndk {
//        abiFilters 'armeabi','armeabi-v7a','arm64-v8a','x86','x86_64'
//    }
    dataBinding {
        enabled = true
    }
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.anko:anko-appcompat-v7-commons:$anko_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    "com.android.databinding:compiler:$gradle_version"
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:support-annotations:28.0.0'
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation files('libs\\sun.misc.BASE64Decoder.jar')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation project(path: ':pluginstand')
    //AOP minSdk 24
    implementation 'org.aspectj:aspectjrt:1.9.4'
}

import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

final def log = project.logger
final def variants = project.android.applicationVariants

//在构建工程时，执行编辑
variants.all { variant ->
    if (!variant.buildType.isDebuggable()) {
        log.debug("Skipping non-debuggable build type '${variant.buildType.name}'.")
        return;
    }

    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.9",
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
        log.debug "ajc args: " + Arrays.toString(args)

        MessageHandler handler = new MessageHandler(true)
        new Main().run(args, handler)
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break;
                case IMessage.WARNING:
                    log.warn message.message, message.thrown
                    break;
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break;
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break;
            }
        }
    }
}
